/**
 * @file mainpage.h
 *
 * @copyright 2019 3081 Staff, All rights reserved.
 */

#ifndef SRC_MAINPAGE_H_
#define SRC_MAINPAGE_H_

/*! \mainpage Visual Transit System Simulator
 *
 * \section intro_sec Introduction
 * The goal of this software project is to enhance a rudimentary transit simulator
 * in which the simulation can be controlled via external configuration(without code change)
 * and be visualized within a graphics window.\n
 * The statistics we have are route-based, we know how likely it is that a passenger will show
 * up at that stop in each time unit. When more than one bus is generated for a route, we need to 
 * take care with stops. After a bus has passed a stop, but has not yet finished their route, it 
 * is possible for passengers to "show up" to stops the bus has already passed. However, when 
 * another bus is created for the same route, it should come and pick up these passengers. This
 * means that each bus may have its own understanding of its own route, but the stops have 
 * relationships with multiple buses in the simulation. This is something we will discuss and 
 * work through in class.\n
 * Buses do not make more than one trip through their routes. When they finish both of their routes
 * (outbound and inbound), the bus is from the simulation. This prevents us from doing interesting
 * things with fuel cost and tracking, but also lowers complexity in a few different places.
 * This project is better to run on a CSE lab machine, Linux system might work, but not guranted.\n
 * To implement the BusFactory class, I uses the concrete one. In this way, I only need to implement 
 * 4 classes. First, generate a BusFactory class contains the generate function, then generate three 
 * different sub bus classes contain the sub constrctor and report function.\n
 * The abstract way is easier to understand. It first creat an AbstractBusFactory. Then, 
 * it creates three sub bus factory classes. Then, generate bus in each sub bus factory.
 * The sub bus factory classes cotain the sub constructor. It calles the constructor in Bus classes.
 * The bus generated by the sub bus factory cotain the report function.\n
 * There are several steps take to run this project: 
 * 1. Open to src directory in the terminal
 * 2. Directly run make
 * 3. run "cd ..", switch the directory to project
 * 4. run "./build/bin/vis_sim 8001"
 * 5. open up a browser(Firefox/Chrome), put "http://127.0.0.1:8001/web_graphics/project.html"
 * in the address bar\n
 * Now the browser should show a map with several button.
 * After you click the "start" button, it should start generate buses.
 * There is another button â€œpause". After click this button, buses stop moving.
 * Click the "resume" button, the buses keeps going. 
 */

#endif  // SRC_MAINPAGE_H_
